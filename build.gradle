plugins {
    id 'org.springframework.boot' version '2.6.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'eclipse'
    
    id "io.freefair.lombok"  version '6.6'
    id 'com.palantir.docker' version '0.22.1'
}

group = 'org.batwan.aptx.apigw'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

def baseName = 'eureka-server'

repositories {
    mavenCentral()
}

/**/
ext {
    set('springCloudVersion', "2021.0.1")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

configurations {
    implementation.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'ch.qos.logback:logback-core:1.2.11'

    /**/
    // Spring Boot Basic.
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Spring Cloud Basic.
    // implementation 'org.springframework.cloud:spring-cloud-starter-config'
    // implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    // implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    
    // 
    implementation 'joda-time:joda-time:2.12.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    testImplementation 'com.h2database:h2:2.1.214'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

bootJar {
    destinationDirectory = file('release')
    exclude('application*.yml')
    
    // mainClassName = 'org.batwan.microservice.eureka.EurekaServerApplication'
    baseName = "$baseName"
    // archiveFileName = "$baseName\.jar"
}

tasks.named('test') {
    useJUnitPlatform()
}

docker {
     name "${project.name}:${project.version}"
     files 'eureka-server.jar'
}


